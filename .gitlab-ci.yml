stages:
  - build
  - test
  - deploy
  - website

build truchas binary:
  stage: build
  needs: []
  tags: ["intel"]
  image: registry.gitlab.com/truchas/ci-images:tpl-mpich-centos7-1.8.1
  variables:
    GIT_FETCH_EXTRA_FLAGS: --tags --prune --prune-tags
    GIT_DEPTH: 0 # fetch all commits and tags
  script:
    - source /opt/rh/devtoolset-9/enable
    - bash ci/version.sh
    - bash ci/build.sh
    - cd build/inst/bin/
    - export INTELDIR=/opt/intel/
    - export LD_LIBRARY_PATH=$INTELDIR/lib/intel64
    - ../../../ci/make_dist.py
    - cd ../../..
    - mkdir dist
    - cp build/inst/bin/truchas-*.tar.bz2 dist/
    - cp version dist/
  artifacts:
    paths:
      - dist/*
    when: always

test truchas intel (Release):
  stage: build
  needs: []
  tags: ["intel"]
  image: registry.gitlab.com/truchas/ci-images:tpl-mpich-centos7-1.8.1
  script:
    - source /opt/rh/devtoolset-9/enable
    - bash ci/build.sh
    - cd build
    - export INTELDIR=/opt/intel/
    - export LD_LIBRARY_PATH=$INTELDIR/lib/intel64
    - ctest --repeat until-pass:2 --output-on-failure

test truchas intel (Debug):
  stage: build
  needs: []
  tags: ["intel"]
  image: registry.gitlab.com/truchas/ci-images:tpl-mpich-centos7-1.8.1
  script:
  script:
    - source /opt/rh/devtoolset-9/enable
    - bash ci/build.sh Debug
    - cd build
    - export INTELDIR=/opt/intel/
    - export LD_LIBRARY_PATH=$INTELDIR/lib/intel64
    - ctest --repeat until-pass:2 --output-on-failure

test truchas GFortran (Debug):
  stage: build
  needs: []
  tags: []
  image: registry.gitlab.com/truchas/ci-images:tpl-mpich-gfortran-1.8.1
  script:
      # Add openmpi executables into path
    - export PATH=$HOME/ext/bin/:$PATH
    - export LD_LIBRARY_PATH=$HOME/ext/lib:$LD_LIBRARY_PATH
      # Prepend our `python` executable into path
    - export PATH="${HOME}/ext/python-install/bin:$PATH"
      # Make all tests run in serial
    - patch -p1 < ci/tests_serial.patch
      # Install Truchas
    - mkdir build
    - cd build
    - cmake
        -C ../config/linux-gcc.cmake
        -DCMAKE_BUILD_TYPE=Debug
        -DTRUCHAS_TPL_DIR=$HOME/ext
        -DCMAKE_INSTALL_PREFIX=inst
        -DUSE_PORTAGE=Yes
        ..
    - make
    - make install
    - ctest --repeat until-pass:2 --output-on-failure -E "RestartSuite|remap|ds2|ds7|free-surf-flow-2"

test truchas GFortran (Release):
  stage: build
  needs: []
  tags: []
  image: registry.gitlab.com/truchas/ci-images:tpl-mpich-gfortran-1.8.1
  script:
      # Add openmpi executables into path
    - export PATH=$HOME/ext/bin/:$PATH
    - export LD_LIBRARY_PATH=$HOME/ext/lib:$LD_LIBRARY_PATH
      # Prepend our `python` executable into path
    - export PATH="${HOME}/ext/python-install/bin:$PATH"
      # Make all tests run in serial
    - patch -p1 < ci/tests_serial.patch
      # Install Truchas
    - mkdir build
    - cd build
    - cmake
        -C ../config/linux-gcc.cmake
        -DCMAKE_BUILD_TYPE=Release
        -DTRUCHAS_TPL_DIR=$HOME/ext
        -DCMAKE_INSTALL_PREFIX=inst
        -DUSE_PORTAGE=Yes
        ..
    - make
    - make install
    - ctest --repeat until-pass:2 --output-on-failure -E "RestartSuite|remap|ds2|ds7|free-surf-flow-2"

test truchas binary (Ubuntu 18.04):
  stage: test
  needs: ["build truchas binary"]
  image: ubuntu:18.04
  script:
    - ci/test_tarball.sh

test truchas binary (Centos 7):
  stage: test
  needs: ["build truchas binary"]
  image: centos:7
  script:
    - yum install -y bzip2
    - ci/test_tarball.sh

upload truchas binary:
  stage: deploy
  needs: ["build truchas binary"]
  image: ubuntu:20.04
  script:
    - apt-get update
    - apt-get install -yq --no-install-recommends git python3 python3-pip python3-setuptools openssh-client
    - pip3 install aiohttp==3.5.4 gidgethub==3.1.0 PyJWT==1.7.1 github3.py==1.3.0
    - python3 ci/upload_binary.py $CI_COMMIT_REF_NAME $CI_COMMIT_TAG
    - ci/upload_json.sh

# Update the downloads page
downloads_update:
  stage: website
  needs: ["upload truchas binary"]
  image: ubuntu:20.04
  script:
    - apt-get update
    - apt-get install -yq --no-install-recommends curl ca-certificates
    - curl -X POST -F token=${DOWNLOAD_UPDATE_TOKEN} -F ref=master https://gitlab.com/api/v4/projects/19864631/trigger/pipeline
  only:
    - master
    - tags
