# Remove the ; for a nice print out
foreach(i ${Truchas_PREPROCESSOR})
  set(Truchas_PREPROCESSOR_STRING "${Truchas_PREPROCESSOR_STRING} ${i}")
endforeach()

message("")
message("Configuration Summary")
message("=====================")
message("")
message("CMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}")
if(CMAKE_BUILD_TYPE)
  message("CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
else()
  message("CMAKE_BUILD_TYPE not specified (this is okay)")
endif()
message("")
message("${CMAKE_C_COMPILER_ID} C compiler (version ${CMAKE_C_COMPILER_VERSION}):")
message("  CMAKE_C_COMPILER=${CMAKE_C_COMPILER}")
message("  CMAKE_C_FLAGS=${CMAKE_C_FLAGS}")
if(CMAKE_BUILD_TYPE)
  message("  CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE_UC}=${CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE_UC}}")
endif()
message("")

message("${CMAKE_Fortran_COMPILER_ID} Fortran compiler (version ${CMAKE_Fortran_COMPILER_VERSION}):")
message("  CMAKE_Fortran_COMPILER=${CMAKE_Fortran_COMPILER}")
message("  CMAKE_Fortran_FLAGS=${CMAKE_Fortran_FLAGS}")
if(CMAKE_BUILD_TYPE)
  message("  CMAKE_Fortran_FLAGS_${CMAKE_BUILD_TYPE_UC}=${CMAKE_Fortran_FLAGS_${CMAKE_BUILD_TYPE_UC}}")
endif()
message("  Fortran source preprocessor command: ${Truchas_PREPROCESSOR_STRING}")
message("")

message("MPI:")
message("  MPI_C_COMPILER=${MPI_C_COMPILER}")
message("  MPI_C_INCLUDE_PATH=${MPI_C_INCLUDE_PATH}")
message("  MPI_C_LIBRARIES=${MPI_C_LIBRARIES}")
message("  MPIEXEC=${MPIEXEC}")
message("  MPIEXEC_NUMPROC_FLAG=${MPIEXEC_NUMPROC_FLAG}")
message("")

message("Python (version ${PYTHON_VERSION_STRING}): ${PYTHON_EXECUTABLE}")
message("")

message("LAPACK library:")
message("  LAPACK_LINKER_FLAGS=${LAPACK_LINKER_FLAGS}")
message("  LAPACK_LIBRARIES=${LAPACK_LIBRARIES}")
message("")

message("Parallel HYPRE library (version ${HYPRE_VERSION}):")
message("  HYPRE_LIBRARIES=${HYPRE_LIBRARIES}")
message("  HYPRE_INCLUDE_DIRS=${HYPRE_INCLUDE_DIRS}")
message("")

message("HDF5 library (version ${HDF5_VERSION}):")
message("  HDF5_LIBRARIES=${HDF5_LIBRARIES}")
message("  HDF5_INCLUDE_DIRS=${HDF5_INCLUDE_DIRS}")
message("")

message("NETCDF library (version ${NETCDF_VERSION}):")
message("  NETCDF_C_LIBRARIES=${NETCDF_C_LIBRARIES}")
message("  NETCDF_C_INCLUDE_DIRS=${NETCDF_C_INCLUDE_DIRS}")
message("  NETCDF_HAS_NC4=${NETCDF_HAS_NC4}")
message("  NETCDF_LARGE_MODEL=${NETCDF_LARGE_MODEL}")
message("")

message("ExodusII library (version ${EXODUS_VERSION}):")
message("  EXODUS_LIBRARIES=${EXODUS_LIBRARIES}")
message("  EXODUS_INCLUDE_DIRS=${EXODUS_INCLUDE_DIRS}")
if(NOT NETCDF_LARGE_MODEL)
  message("  Warning: The NetCDF library being used does not include the \"large model\"\n"
          "  modifications recommended by Exodus.")
endif()
message("")

message("Petaca library (version ${PETACA_VERSION}):")
message("  PETACA_LIBRARIES=${PETACA_LIBRARIES}")
message("  PETACA_INCLUDE_DIRS=${PETACA_INCLUDE_DIRS}")
message("")

message("Chaparral library (version ${CHAPARRAL_VERSION}):")
message("  CHAPARRAL_LIBRARY=${CHAPARRAL_LIBRARY}")
message("")

message("Scorpio library (version ${SCORPIO_VERSION}):")
message("  SCORPIO_LIBRARY=${SCORPIO_LIBRARY}")
message("")

if(USE_METIS)
  message("Metis library (version ${METIS_VERSION}):")
  message("  METIS_LIBRARY=${METIS_LIBRARIES}")
  message("")
endif()

if(USE_PORTAGE)
  message("Portage installation:")
  message("  WONTON_ROOT=${WONTON_ROOT}")
  message("  PORTAGE_ROOT=${PORTAGE_ROOT}")
  message("")
endif()
