project(NKA-F95 Fortran)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

message(STATUS "CMAKE_Fortran_COMPILER_ID=${CMAKE_Fortran_COMPILER_ID}")
message(STATUS "Fortran_COMPILER_IS_GNU=${CMAKE_Fortran_COMPILER_IS_GNU}")
message(STATUS "Fortran_COMPILER_IS_G95=${CMAKE_Fortran_COMPILER_IS_G95}")
message(STATUS "Fortran_COMPILER_IS_INTEL=${CMAKE_Fortran_COMPILER_IS_INTEL}")
message(STATUS "Fortran_COMPILER_IS_NAG=${CMAKE_Fortran_COMPILER_IS_NAG}")
message(STATUS "Fortran_COMPILER_IS_ABSOFT=${CMAKE_Fortran_COMPILER_IS_ABSOFT}")
message(STATUS "Fortran_COMPILER_IS_PGI=${CMAKE_Fortran_COMPILER_IS_PGI}")
if (Fortran_COMPILER_IS_NAG)
  set (CMAKE_Fortran_FLAGS_RELEASE "-O3 -Ounsafe -DNDEBUG")
  set (CMAKE_Fortran_FLAGS_DEBUG   "-g90 -gline")
elseif (Fortran_COMPILER_IS_INTEL)
  set (CMAKE_Fortran_FLAGS_RELEASE "-O3 -DNDEBUG")
  set (CMAKE_Fortran_FLAGS_DEBUG   "-g")
elseif(Fortran_COMPILER_IS_GNU)
  set (CMAKE_Fortran_FLAGS_RELEASE "-O3 -DNDEBUG")
  set (CMAKE_Fortran_FLAGS_DEBUG   "-g")
elseif(Fortran_COMPILER_IS_G95 )
  set (CMAKE_Fortran_FLAGS_RELEASE "-O3 -DNDEBUG")
  set (CMAKE_Fortran_FLAGS_DEBUG   "-g")
endif()

include_directories(${NKA-F95_SOURCE_DIR})
add_executable(nka_example f90_assert.F90 ../nka_type.F90 nka_example.F90)
